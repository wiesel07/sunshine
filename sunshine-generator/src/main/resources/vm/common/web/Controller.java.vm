package ${controllerPackageName}.controller;

import java.util.ArrayList;
import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;

import cn.sunshine.common.api.R;
import cn.sunshine.common.base.entity.OperParam;
import cn.sunshine.common.base.entity.PageResp;
import cn.sunshine.common.constant.CommonUrlConstant;
import ${packageName}.entity.req.${capitalEntityPageReqName};
import ${packageName}.entity.req.${capitalEntityReqName};
import ${packageName}.entity.resp.${capitalEntityRespName};
import ${packageName}.entity.resp.${capitalEntityPageRespName}; 
import ${packageName}.entity.${capitalEntityName};
import ${packageName}.service.${capitalServiceName};
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;


/**
 * <p>
 *  ${tableComment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${createDate}
 */
@Slf4j
@Api(tags = "${tableComment} 前端控制器")
@RestController
@RequestMapping("#if(${moduleName}!='' )/${moduleName}#end/${path}")
public class ${capitalControllerName} { 
    
    
    @Autowired
	private ${capitalServiceName} ${serviceImplName};

	
	@ApiOperation(value = "获取列表(分页)", notes = "获取列表(分页)")
	@GetMapping(CommonUrlConstant.QUERY_PAGE)
	public R<PageResp<${capitalEntityPageRespName}>> queryPage(@Valid ${capitalEntityPageReqName} ${entityPageReqName}) {
		log.info("获取列表(分页)(${entityPageReqName}={})", ${entityPageReqName});
		
		PageResp<${capitalEntityPageRespName}> pageResp = sysMenuService.queryPage(${entityPageReqName});
		// 返回结果集组
		return new R<>(pageResp);
	}

	@ApiOperation(value = "新增", notes = "新增")
	@PostMapping(CommonUrlConstant.CREATE)
	public R<String> create(@Valid @RequestBody ${capitalEntityReqName} ${entityReqName}) {
		log.info("新增(${entityReqName}={})", ${entityReqName});

		${serviceImplName}.doCreate(${entityReqName});

		return new R<String>();
	}

	@ApiOperation(value = "修改", notes = "修改")
	@PostMapping(CommonUrlConstant.UPDATE)
	public R<String> update(@Valid @RequestBody ${capitalEntityReqName} ${entityReqName}) {
		log.info("修改(${entityReqName}={})", ${entityReqName});

		${serviceImplName}.doUpdate(${entityReqName});

		return new R<String>();
	}
	
	
	@ApiOperation(value = "删除", notes = "删除")
	@PostMapping(CommonUrlConstant.REMOVE)
	public R<String> remove(@Valid @RequestBody OperParam operParam) {
		log.info("删除(operParam={})", operParam);

		${serviceImplName}.doRemove(Long.valueOf(operParam.getId()));

		return new R<String>();
	}

}
