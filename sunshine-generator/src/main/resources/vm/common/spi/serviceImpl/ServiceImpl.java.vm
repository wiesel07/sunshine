package ${packageName}.service.impl;

import org.springframework.stereotype.Service;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;

import cn.sunshine.common.base.entity.PageResp;
import cn.sunshine.common.util.BeanUtilExt;
import cn.sunshine.common.util.Toolkit;
import ${packageName}.entity.${capitalEntityName};
import ${packageName}.entity.req.${capitalEntityPageReqName};
import ${packageName}.entity.req.${capitalEntityReqName};
import ${packageName}.entity.resp.${capitalEntityRespName};
import ${packageName}.entity.resp.${capitalEntityPageRespName}; 
import ${packageName}.mapper.${capitalMapperName};
import ${packageName}.service.${capitalServiceName};


 /**
 * <p>
 *  ${tableComment} 服务实现类
 * </p>
 *
 * @author ${author}
 * @since ${createDate}
 */
@Service
public class ${capitalServiceImplName} extends ServiceImpl<${capitalMapperName}, ${capitalEntityName}> implements ${capitalServiceName} {


    @SuppressWarnings("unchecked")
	@Override
	public PageResp<${capitalEntityPageRespName}> queryPage(${capitalEntityPageReqName} ${entityPageReqName}) {
		IPage<${capitalEntityName}> page = new Page<>(${entityPageReqName}.getPageNo(), ${entityPageReqName}.getPageSize());

		QueryWrapper<${capitalEntityName}> qw = new QueryWrapper<>();
	
		page = this.baseMapper.selectPage(page, qw);
		return Toolkit.converter.copyPage(page, ${capitalEntityPageRespName}.class);
	}

	@Override
    public void doCreate(${capitalEntityReqName} ${entityReqName}){
    
       ${capitalEntityName} ${entityName} = new ${capitalEntityName}();
		BeanUtilExt.copyProperties(${entityReqName}, ${entityName});
		this.baseMapper.insert(${entityName});
    }
    
    
    @Override
    public void doUpdate(${capitalEntityReqName} ${entityReqName}){
    
        ${capitalEntityName} ${entityName} = new ${capitalEntityName}();
		BeanUtilExt.copyProperties(${entityReqName}, ${entityName});
		this.baseMapper.updateById(${entityName});
    }
    
    
    @Override
    public void doRemove(Long id){
    
       this.baseMapper.deleteById(id);
    }
}
